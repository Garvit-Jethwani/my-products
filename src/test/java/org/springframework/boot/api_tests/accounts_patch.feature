# ********RoostGPT********

# Test generated by RoostGPT for test karate-test-credential using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /accounts_patch for http method type PATCH 
# RoostTestHash=2758affb7e
# 
# 

# ********RoostGPT********
Feature: Login to existing Account

Background:
* def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
* url urlBase

Scenario Outline: Login to existing Account
    Given path '/accounts'
    And request
    """
    {
      "email": "<email>"
    }
    """
    When method POST
    Then status 200
    And match header api-version == '1.0.0'

    Examples:
      | email                 |
      | john.doe@example.com  |
      | jane.smith@example.io |

Scenario: Login with invalid email format
    Given path '/accounts'  
    And request
    """
    {
      "email": "invalid.email"
    }
    """
    When method POST
    Then status 400
    And match header api-version == '1.0.0'
    And match response.error == 'validation/email-pattern'
    And match response.description == 'Descriptive Error Message'
    And match response.field == 'email'

Scenario: Login with missing email
    Given path '/accounts'
    And request {}
    When method POST 
    Then status 400
    And match header api-version == '1.0.0'
    And match response.error == 'error/code'
    And match response.description == 'Descriptive Error Message'
