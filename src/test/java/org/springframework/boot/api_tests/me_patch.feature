# ********RoostGPT********

# Test generated by RoostGPT for test karate-test-credential using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /me_patch for http method type PATCH 
# RoostTestHash=6dd436357d
# 
# 

# ********RoostGPT********
Feature: Account API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * def requestBody = read('classpath:examples/accountRequestBody.json')
  * def expectedResponse = read('classpath:examples/accountResponse.json')

Scenario Outline: Change my settings or account name
  Given path '/me'
  And header Token = authToken
  And request requestBody
  When method POST
  Then status 200
  And match header api-version == '1.0.0'
  And match response == expectedResponse
  And match response.id == '#uuid'
  And match response.did == '#string'
  And match response.name == '#string? ^[\\p{L} .\'-]{1,100}$'
  And match response.image == '#string? ^\\w+:(\\/?\\/?)[^\\s]+$'
  And match response.email == '#string ^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$'
  And match response.settings == '#object'
  And match response.createdAt == '#string'
  And match response.updatedAt == '#string'

  Examples:
    | requestBody.name | requestBody.image                      | requestBody.settings |
    | 'John Doe'       | 'data:image/jpeg;base64,<clipped>'     | {"theme": "dark"}    |
    | 'Jane Smith'     | null                                   | {}                   |

Scenario: Change settings with invalid request
  Given path '/me' 
  And header Token = authToken
  And request {"name": "John!", "settings": {"invalid": 123}}
  When method POST
  Then status 400
  And match header api-version == '1.0.0'
  And match response.error == '#string ^validation/.*$'
  And match response.description == '#string'
  And match response.value == '#present'
  And match response.field == '#string'
  And match response.schema_field == '#string'

Scenario: Unauthorized request
  Given path '/me'
  And request {}
  When method POST 
  Then status 401
  And match header api-version == '1.0.0'
  And match response.error == '#string'
  And match response.description == '#string'
