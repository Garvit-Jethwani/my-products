# ********RoostGPT********

# Test generated by RoostGPT for test karate-test-credential using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /accounts_post for http method type POST 
# RoostTestHash=53e96f9805
# 
# 

# ********RoostGPT********
Feature: Accounts API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def AUTH_TOKEN = karate.properties['AUTH_TOKEN']
  * def apiVersion = '1.0.0'
  * def commitHash = '928d28d'

Scenario: Create new Account with valid email
  Given path '/accounts'
  And header commit-hash = '1234567'
  And request { "email": "test@example.com" }
  When method POST
  Then status 201
  And match header api-version == apiVersion
  And match header commit-hash == commitHash

Scenario: Create new Account with invalid email format
  Given path '/accounts'
  And header commit-hash = '1234567'
  And request { "email": "invalid_email" }
  When method POST
  Then status 400
  And match header api-version == apiVersion
  And match response.error == 'validation/email-pattern'
  And match response.description == 'Descriptive Error Message'
  And match response.field == 'email'

Scenario: Create new Account with missing email
  Given path '/accounts'
  And header commit-hash = '1234567'
  And request { }
  When method POST
  Then status 400
  And match header api-version == apiVersion
  And match response.error == 'error/code'
  And match response.description == 'Descriptive Error Message'

Scenario Outline: Create new Account with various email formats
  Given path '/accounts'
  And header commit-hash = '1234567'
  And request { "email": "<email>" }
  When method POST
  Then status <status>
  And match header api-version == apiVersion

  Examples:
    | email                | status |
    | test@example.com     | 201    |
    | test.user@domain.com | 201    |
    | test@subdomain.domain.com | 201 |
    | invalid_email        | 400    |
    | test@invalid.        | 400    |
    | @invalid.com         | 400    |
