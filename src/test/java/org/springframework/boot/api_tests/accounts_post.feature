# ********RoostGPT********

# Test generated by RoostGPT for test karate-test-credential using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /accounts_post for http method type POST 
# RoostTestHash=53e96f9805
# 
# 

# ********RoostGPT********
Feature: Account Creation

Background:
* def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
* url urlBase

Scenario Outline: Create new account with valid email
Given path '/accounts'
And header commit-hash = '<commit-hash>'
And request
"""
{
  "email": "<email>"
}
"""
When method POST
Then status 201
And match header api-version == '1.0.0'
And match header commit-hash == '928d28d'

Examples:
| commit-hash | email                 |
| a1b2c3d     | user@example.com      |
| e5f6g7h     | test.user@example.org |


Scenario: Create account with invalid email format
Given path '/accounts'
And request
"""
{
  "email": "invalid_email"  
}
"""
When method POST
Then status 400
And match header api-version == '1.0.0'
And match response ==
"""
{
  "error": "#regex ^validation/.*$",
  "description": "#string",
  "value": "#notpresent",
  "field": "#string",
  "schema_field": "#string"
}
"""

Scenario: Create account with missing email
Given path '/accounts'  
And request
"""
{}
"""
When method POST
Then status 400
And match header api-version == '1.0.0'
And match response == 
"""
{
  "error": "#string",
  "description": "#string"
}
"""
