# ********RoostGPT********

# Test generated by RoostGPT for test karate-test-credential using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /login_post for http method type POST 
# RoostTestHash=3122292ee3
# 
# 

# ********RoostGPT********
Feature: Login API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase

Scenario Outline: Login using OTP - Successful
  Given path '/login'
  And request
    """
    {
      "email": "<email>",
      "otp": "<otp>",
      "client": "<client>"
    }
    """
  When method POST
  Then status 201
  And match header api-version == '1.0.0'
  And match response.token == '#regex ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

  Examples:
    | email                | otp     | client  |
    | user@example.com     | 123456  | mobile  |
    | test.user@domain.com | 987654  | web     |
    | admin@company.com    | 456789  | desktop |
    | api@service.com      | 654321  | api     |

Scenario Outline: Login using OTP - Bad Request
  Given path '/login'
  And request
    """
    {
      "email": "<email>",
      "otp": "<otp>",
      "client": "<client>"
    }
    """
  When method POST
  Then status 400
  And match header api-version == '1.0.0'
  And match response.error == '#regex ^(error/code|validation/.*)$'
  And match response.description == '#string'
  And match response.value == '#present'
  And match response.field == '#present'
  And match response.schema_field == '#present'

  Examples:
    | email           | otp    | client   |
    | invalid.email   | 123456 | mobile   |
    | user@example    | abc    | web      |
    | admin@company   | 123    | invalid  |
    |                 | 654321 | api      |
