# ********RoostGPT********

# Test generated by RoostGPT for test karate-claude using AI Type  and AI Model 
# 
# Feature file generated for /GetCustomerInfo_post for http method type POST 
# RoostTestHash=88810bf424
# 
# 

# ********RoostGPT********
Feature: GetCustomerInfo API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * def requestBody = read('classpath:examples/GetCustomerInfo/requestBody.json')

  Scenario: Fetch customer information with valid request
    Given path '/GetCustomerInfo'
    And header Authorization = authToken
    And header koreUserId = 'testUser'
    And header botId = 'testBot'
    And header accountId = 'testAccount'
    And header X-Auth-token = 'testToken'
    And header X-CORRELATION-ID = 12345
    And request requestBody
    When method POST
    Then status 200
    And match response == read('classpath:examples/GetCustomerInfo/response200.json')
    And match response.customerId == '#string'
    And match response.email == '#string'
    And match response.firstName == '#string'
    And match response.lastName == '#string'
    And match response.phone == '#number'
    And match response.personalBanker.name == '#string'
    And match response.personalBanker.email == '#string'
    And match response.personalBanker.mobileNumber == '#string'
    And match response.securityQuestions == '#[2]'
    And match each response.securityQuestions == '#string'

  Scenario: Fetch customer information with missing authorization token
    Given path '/GetCustomerInfo'
    And header koreUserId = 'testUser'
    And header botId = 'testBot'
    And header accountId = 'testAccount'
    And header X-CORRELATION-ID = 12345
    And request requestBody
    When method POST
    Then status 401
    And match response.err.message == 'Authorisation failed.'

  Scenario: Fetch customer information with invalid customer ID
    Given path '/GetCustomerInfo'
    And header Authorization = authToken
    And header koreUserId = 'testUser'
    And header botId = 'testBot'
    And header accountId = 'testAccount'
    And header X-Auth-token = 'testToken'
    And header X-CORRELATION-ID = 12345
    And request
      """
      {
        "customerId": 999999
      }
      """
    When method POST
    Then status 404
    And match response.err.message == 'Not Found'
