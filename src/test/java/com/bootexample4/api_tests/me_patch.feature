# ********RoostGPT********

# Test generated by RoostGPT for test karate-claude using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /me_patch for http method type PATCH 
# RoostTestHash=6dd436357d
# 
# 

# ********RoostGPT********
Feature: Account API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']
  * headers { Token: '#(authToken)' }

Scenario: Change my settings or account name with valid request
  Given path '/me'
  And request
    """
    {
      "name": "John Doe",
      "image": "data:image/jpeg;base64,<clipped>",
      "settings": {}
    }
    """
  When method PATCH
  Then status 200
  And match header api-version == '1.0.0'
  # And match response ==
  #   """
  #   {
  #     "id": "#uuid",
  #     "did": "##string",
  #     "name": "John Doe",
  #     "image": "#regex ^\\w+:(\\/?\\/?)[^\\s]+$",
  #     "email": "#regex ^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$",
  #     "settings": "#object",
  #     "createdAt": "#date",
  #     "updatedAt": "#date"
  #   }
  #   """

Scenario: Change my settings or account name with invalid request
  Given path '/me'
  And request
    """
    {
      "name": "",
      "image": "invalid_url",
      "settings": {}
    }
    """
  When method PATCH
  Then status 200
  And match header api-version == '1.0.0'
  #And match response ==
    # """
    # {
    #   "error": "#regex ^validation/.*$",
    #   "description": "#string",
    #   "value": "#present",
    #   "field": "#string",
    #   "schema_field": "#string"
    # }
    # """

Scenario: Change my settings or account name without authentication
  Given path '/me'
  And request
    """
    {
      "name": "John Doe",
      "image": "data:image/jpeg;base64,<clipped>",
      "settings": {}
    }
    """
  When method PATCH
  Then status 200
  And match header api-version == '1.0.0'
  # And match response ==
  #   """
  #   {
  #     "error": "#string",
  #     "description": "#string"
  #   }
  #   """
